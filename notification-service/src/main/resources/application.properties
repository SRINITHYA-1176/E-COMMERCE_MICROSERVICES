spring.application.name=notification-service
server.port=8083
#Mail Properties
spring.mail.host=sandbox.smtp.mailtrap.io
spring.mail.port=2525
spring.mail.username=f2f470f92b8589
spring.mail.password=7b8fc7f3ea4217

# Kafka Consumer Properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=notificationService
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Trust all (for development only, ideally restrict to specific package)
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Use ErrorHandlingDeserializer + JsonDeserializer
//spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.schema.registry.url=http://127.0.0.1:8085
spring.kafka.consumer.properties.specific.avro.reader=true

# Force deserialize to your local class
spring.kafka.consumer.properties.spring.json.value.default.type=com.srinithya.microservices.notification.order.event.OrderPlacedEvent
# Ignore type info in headers
spring.kafka.consumer.properties.spring.json.use.type.headers=false

management.endpoints.web.exposure.include=health, info, metrics, prometheus
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=notification-service
management.tracing.sampling.probability=1.0